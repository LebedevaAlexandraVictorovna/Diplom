# -*- coding: utf-8 -*-

class Student():
    id = 0
    def __init__(self):
        self.surname = "Фамилия"
        self.name = "Имя"
        self.patronim = "Отчество"
        self.password = "0000"
        self.course = 1
        self.group = "БИВ"
        self.subgroup = 1
        self.id = Student.id + 1 # продумать правильно
    
    #setters
    def set_id(self, id):
        self.id = id

    def set_name(self, name):
        self.name = name
    
    def set_password(self, password):
        self.password = password 
    
    def set_course(self, course):
        self.course = course
    
    def set_group(self, group):
        self.group = group
    
    def set_subgroup(self, subgroup):
        self.subgroup = subgroup
    
    # getters
    def get_id(self):
        return(self.id)

    def get_name(self):
        return(self.name)
    
    def get_password(self):
        return(self.password)
    
    def get_course(self):
        return(self.course)

    def get_group(self):
        return(self.group)
    
    def get_subgroup(self):
        return(self.subgroup)


from socket import socket, AF_INET, SOCK_STREAM
from threading import Thread

def accept_incoming_connections():
    """Sets up handling for incoming clients."""
    while True:
        client, client_address = SERVER.accept()
        print("%s:%s has connected." % client_address)
        addresses[client] = client_address
        Thread(target=handle_client, args=(client,)).start()

def handle_client(client):  # Takes client socket as argument.
    """Handles a single client connection."""
 
    msg = client.recv(1024).decode("utf8")
    if msg == "1":
        print("Logging in") #вход
    else:
        print("Signing in") # регистрация
        clients[client] = name
    
    while True:
        msg = client.recv(1024).decode("utf8") # меню
        print(msg)
        if msg == "1":
            client.send(bytes("Зачетка", "utf8"))
        elif msg == "2":
            client.send(bytes("Рейтинг", "utf8"))
        else:
            client.send(bytes("До свидания!", "utf8"))
            client.close()
            break
 
clients = {}
addresses = {}

SERVER = socket(AF_INET, SOCK_STREAM)
SERVER.bind(('localhost', 89))
 
if __name__ == "__main__":
    SERVER.listen(5)
    print("Waiting for connection...")
    ACCEPT_THREAD = Thread(target=accept_incoming_connections)
    ACCEPT_THREAD.start()
    ACCEPT_THREAD.join()
    SERVER.close()
